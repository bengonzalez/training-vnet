pool:
  name: Azure Pipelines
  vmImage: ubuntu-latest

steps:
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: 'Install Terraform latest'

- script: |
    export TF_VAR_tli=$(tli)
    export TF_VAR_sub_short_name=$(sub_short_name)
    export TF_VAR_region=$(region_primary)
    export TF_VAR_region_short=$(region_primary_short)
    export TF_VAR_competency=$(competency)
    
    export ARM_CLIENT_ID=$(Azure-SP-ID)
    export ARM_CLIENT_SECRET=$(Azure-SP-Pass)
    export ARM_TENANT_ID=$(Azure-Tenant-ID)
    export ARM_SUBSCRIPTION_ID=$(Azure-Sub-ID)

    export tf_rg_name=$(tf_rg_name)
    export tf_stg_name=$(tf_stg_name)
    export tf_container_name=$(tf_container)
    export tf_backend_key=$(tf_key)
    
    echo $tf_rg_name
    echo $tf_stg_name
    
    ACCOUNT_KEY=$(az storage account keys list --resource-group $tf_rg_name --account-name $tf_stg_name --query '[0].value' -o tsv)
    export ARM_ACCESS_KEY=$ACCOUNT_KEY
    echo ARM_ACCESS_KEY:$ARM_ACCESS_KEY
    
    export ARM_USE_CLI=false
    
    terraform init -backend-config="resource_group_name=$tf_rg_name" \
                   -backend-config="storage_account_name=$tf_stg_name" \
                   -backend-config="container_name=$tf_container_name" \
                   -backend-config="key=$tf_backend_key"
    
    terraform fmt
    terraform workspace select primary
    terraform apply -var-file ./env/primary.tfvars --auto-approve
  displayName: 'Terraform init and apply'
     

